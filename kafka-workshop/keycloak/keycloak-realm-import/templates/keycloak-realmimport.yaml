{{- range untilStep 0 (.Values.loop.count | int64 | int) 1 }}
{{- $loop := printf "%s%s" $.Values.loop.prefix ((add . 1) | toString) }}
{{- $globexWebGatewayContainerId := printf "%s" (uuidv4 | toString) }}
{{- $clientRealmManagementContainerId := printf "%s" (uuidv4 | toString) }}
{{- $clientBrokerContainerId := printf "%s" (uuidv4 | toString) }}
{{- $accountContainerId := printf "%s" (uuidv4 | toString) }}
---
apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: {{ $.Values.realm.name }}-{{ $loop }}
  labels:
    {{- include "keycloak-realmimport.labels" $ | nindent 4 }}
    app: keycloak
spec:
  keycloakCRName: {{ $.Values.keycloak.name }}
  realm:
    id: {{ $.Values.realm.name }}-{{ $loop }}
    realm: {{ $.Values.realm.name }}-{{ $loop }}
    displayName: {{ $.Values.realm.name }}-{{ $loop }}
    notBefore: 0
    defaultSignatureAlgorithm: RS256
    revokeRefreshToken: false
    refreshTokenMaxReuse: 0
    accessTokenLifespan: 300
    accessTokenLifespanForImplicitFlow: 3600
    ssoSessionIdleTimeout: 1800
    ssoSessionMaxLifespan: 36000
    ssoSessionIdleTimeoutRememberMe: 0
    ssoSessionMaxLifespanRememberMe: 0
    offlineSessionIdleTimeout: 2592000
    offlineSessionMaxLifespanEnabled: false
    offlineSessionMaxLifespan: 5184000
    clientSessionIdleTimeout: 0
    clientSessionMaxLifespan: 0
    clientOfflineSessionIdleTimeout: 0
    clientOfflineSessionMaxLifespan: 0
    accessCodeLifespan: 60
    accessCodeLifespanUserAction: 300
    accessCodeLifespanLogin: 1800
    actionTokenGeneratedByAdminLifespan: 43200
    actionTokenGeneratedByUserLifespan: 300
    oauth2DeviceCodeLifespan: 600
    oauth2DevicePollingInterval: 5
    enabled: true
    sslRequired: external
    registrationAllowed: false
    registrationEmailAsUsername: false
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false
    editUsernameAllowed: false
    bruteForceProtected: false
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    roles:
      realm:
        - id: {{ uuidv4 }}
          name: admin
          composite: false
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
        - id: {{ uuidv4 }}
          name: confidential
          composite: false
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
        - id: {{ uuidv4 }}
          name: default-roles-{{ $.Values.realm.name }}
          description: "${role_default-roles}"
          composite: true
          composites:
            realm:
                - offline_access
                - uma_authorization
            client:
              account:
                - view-profile
                - manage-account
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
        - id: {{ uuidv4 }}
          name: offline_access
          description: "${role_offline-access}"
          composite: false
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
        - id: {{ uuidv4 }}
          name: uma_authorization
          description: "${role_uma_authorization}"
          composite: false
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
        - id: {{ uuidv4 }}
          name: mobile-user
          composite: false
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
        - id: {{ uuidv4 }}
          name: web-user
          composite: false
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
        - id: {{ uuidv4 }}
          name: user
          composite: false
          clientRole: false
          containerId: {{ $.Values.realm.name }}-{{ $loop }}
          attributes: {}
      client:
        {{ $.Values.client.gateway }}:
          - id: {{ uuidv4 }}
            name: uma_protection
            composite: false
            clientRole: true
            containerId: {{ $globexWebGatewayContainerId }}
            attributes: {}
        realm-management:
          - id: {{ uuidv4 }}
            name: manage-identity-providers
            description: "${role_manage-identity-providers}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: query-clients
            description: "${role_query-clients}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-users
            description: "${role_view-users}"
            composite: true
            composites:
              client:
                realm-management:
                - query-groups
                - query-users
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-events
            description: "${role_view-events}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-identity-providers
            description: "${role_view-identity-providers}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: manage-events
            description: "${role_manage-events}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-clients
            description: "${role_view-clients}"
            composite: true
            composites:
              client:
                realm-management:
                - query-clients
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: query-realms
            description: "${role_query-realms}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: manage-clients
            description: "${role_manage-clients}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-authorization
            description: "${role_view-authorization}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: query-groups
            description: "${role_query-groups}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: query-users
            description: "${role_query-users}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: manage-authorization
            description: "${role_manage-authorization}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: manage-users
            description: "${role_manage-users}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: manage-realm
            description: "${role_manage-realm}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: realm-admin
            description: "${role_realm-admin}"
            composite: true
            composites:
              client:
                realm-management:
                - manage-identity-providers
                - query-clients
                - view-users
                - view-identity-providers
                - view-events
                - view-clients
                - manage-events
                - query-realms
                - manage-clients
                - view-authorization
                - query-groups
                - query-users
                - manage-authorization
                - manage-users
                - manage-realm
                - create-client
                - view-realm
                - impersonation
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: create-client
            description: "${role_create-client}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-realm
            description: "${role_view-realm}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: impersonation
            description: "${role_impersonation}"
            composite: false
            clientRole: true
            containerId: {{ $clientRealmManagementContainerId }}
            attributes: {}
        security-admin-console: []
        admin-cli: []
        account-console: []
        broker:
          - id: {{ uuidv4 }}
            name: read-token
            description: "${role_read-token}"
            composite: false
            clientRole: true
            containerId: {{ $clientBrokerContainerId }}
            attributes: {}
        account:
          - id: {{ uuidv4 }}
            name: manage-consent
            description: "${role_manage-consent}"
            composite: true
            composites:
              client:
                account:
                - view-consent
            clientRole: true
            containerId: {{ $accountContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: manage-account-links
            description: "${role_manage-account-links}"
            composite: false
            clientRole: true
            containerId: {{ $accountContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-profile
            description: "${role_view-profile}"
            composite: false
            clientRole: true
            containerId: {{ $accountContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: manage-account
            description: "${role_manage-account}"
            composite: true
            composites:
              client:
                account:
                - manage-account-links
            clientRole: true
            containerId: {{ $accountContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: delete-account
            description: "${role_delete-account}"
            composite: false
            clientRole: true
            containerId: {{ $accountContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-applications
            description: "${role_view-applications}"
            composite: false
            clientRole: true
            containerId: {{ $accountContainerId }}
            attributes: {}
          - id: {{ uuidv4 }}
            name: view-consent
            description: "${role_view-consent}"
            composite: false
            clientRole: true
            containerId: {{ $accountContainerId }}
            attributes: {}
    groups: []
    defaultRole:
      id: {{ uuidv4 }}
      name: default-roles-{{ $.Values.realm.name }}
      description: "${role_default-roles}"
      composite: false
      clientRole: false
      containerId: {{ $.Values.realm.name }}-{{ $loop }}
    requiredCredentials:
      - password
    otpPolicyType: totp
    otpPolicyAlgorithm: HmacSHA1
    otpPolicyInitialCounter: 0
    otpPolicyDigits: 6
    otpPolicyLookAheadWindow: 1
    otpPolicyPeriod: 30
    otpSupportedApplications:
      - totpAppGoogleName
      - totpAppMicrosoftAuthenticatorName
      - totpAppFreeOTPName
    webAuthnPolicyRpEntityName: keycloak
    webAuthnPolicySignatureAlgorithms:
      - ES256
    webAuthnPolicyRpId: ''
    webAuthnPolicyAttestationConveyancePreference: not specified
    webAuthnPolicyAuthenticatorAttachment: not specified
    webAuthnPolicyRequireResidentKey: not specified
    webAuthnPolicyUserVerificationRequirement: not specified
    webAuthnPolicyCreateTimeout: 0
    webAuthnPolicyAvoidSameAuthenticatorRegister: false
    webAuthnPolicyAcceptableAaguids: []
    webAuthnPolicyPasswordlessRpEntityName: keycloak
    webAuthnPolicyPasswordlessSignatureAlgorithms:
      - ES256
    webAuthnPolicyPasswordlessRpId: ''
    webAuthnPolicyPasswordlessAttestationConveyancePreference: not specified
    webAuthnPolicyPasswordlessAuthenticatorAttachment: not specified
    webAuthnPolicyPasswordlessRequireResidentKey: not specified
    webAuthnPolicyPasswordlessUserVerificationRequirement: not specified
    webAuthnPolicyPasswordlessCreateTimeout: 0
    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false
    webAuthnPolicyPasswordlessAcceptableAaguids: []
    users:
      - username: service-account-{{ $.Values.client.gateway }}
        enabled: true
        totp: false
        emailVerified: false
        email: service-account-backend-service@placeholder.org
        serviceAccountClientId: {{ $.Values.client.gateway }}
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
          - offline_access
        clientRoles:
          {{ $.Values.client.gateway }}:
            - uma_protection
          account:
            - view-profile
            - manage-account
        notBefore: 0
        groups: []
      - username: {{ $loop }}
        email: {{ $loop }}@email.com
        enabled: true
        totp: false
        emailVerified: false
        firstName: ''
        lastName: ''
        credentials:
          - type: password
            userLabel: My password
            secretData: '{"value":"80d4Uk0YFiEgjhzKlTCPpWIj1ZwPJhLbdOmtT6jrbGk=","salt":"I/MiuExkIwpPxqm41IaSEQ==","additionalParameters":{}}'
            credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
          - default-roles-globex-{{ $loop }}
        clientRoles:
          realm-management:
            - realm-admin
            - manage-realm
            - manage-clients
        notBefore: 0
        groups: []
      - username: asilva
        enabled: true
        totp: false
        emailVerified: false
        firstName: ''
        lastName: ''
        email: asilva@email.com
        credentials:
          - type: password
            userLabel: My password
            secretData: '{"value":"80d4Uk0YFiEgjhzKlTCPpWIj1ZwPJhLbdOmtT6jrbGk=","salt":"I/MiuExkIwpPxqm41IaSEQ==","additionalParameters":{}}'
            credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
          - default-roles-{{ $.Values.realm.name }}
          - web-user
        notBefore: 0
        groups: []
      - username: mmiller
        enabled: true
        totp: false
        emailVerified: false
        firstName: ''
        lastName: ''
        email: mmiller@topvibe.com
        credentials:
          - type: password
            userLabel: My password
            secretData: '{"value":"80d4Uk0YFiEgjhzKlTCPpWIj1ZwPJhLbdOmtT6jrbGk=","salt":"I/MiuExkIwpPxqm41IaSEQ==","additionalParameters":{}}'
            credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
          - default-roles-{{ $.Values.realm.name }}
          - web-user
        notBefore: 0
        groups: []
      - username: asanders
        enabled: true
        totp: false
        emailVerified: false
        firstName: ''
        lastName: ''
        email: asanders@topgreatest.com
        credentials:
          - type: password
            userLabel: My password
            secretData: '{"value":"80d4Uk0YFiEgjhzKlTCPpWIj1ZwPJhLbdOmtT6jrbGk=","salt":"I/MiuExkIwpPxqm41IaSEQ==","additionalParameters":{}}'
            credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
          - default-roles-{{ $.Values.realm.name }}
          - web-user
        notBefore: 0
        groups: []
      - username: cjones
        enabled: true
        totp: false
        emailVerified: false
        firstName: ''
        lastName: ''
        email: cjones@zmail.com
        credentials:
          - type: password
            userLabel: My password
            secretData: '{"value":"80d4Uk0YFiEgjhzKlTCPpWIj1ZwPJhLbdOmtT6jrbGk=","salt":"I/MiuExkIwpPxqm41IaSEQ==","additionalParameters":{}}'
            credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
          - default-roles-{{ $.Values.realm.name }}
          - web-user
        notBefore: 0
        groups: []
      - username: pwong
        enabled: true
        totp: false
        emailVerified: false
        firstName: ''
        lastName: ''
        email: pwong@firstsimple.com
        credentials:
          - type: password
            userLabel: My password
            secretData: '{"value":"80d4Uk0YFiEgjhzKlTCPpWIj1ZwPJhLbdOmtT6jrbGk=","salt":"I/MiuExkIwpPxqm41IaSEQ==","additionalParameters":{}}'
            credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
          - default-roles-{{ $.Values.realm.name }}
          - web-user
        notBefore: 0
        groups: []
    clientScopeMappings:
      account:
        - client: account-console
          roles:
            - manage-account
            - view-groups
    clients:
      - id: {{ $accountContainerId }}
        clientId: account
        name: "${client_account}"
        rootUrl: "${authBaseUrl}"
        baseUrl: "/realms/{{ $.Values.realm.name }}-{{ $loop }}/account/"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ randAlphaNum 32 }}"
        redirectUris:
          - "/realms/{{ $.Values.realm.name }}-{{ $loop }}/account/*"
        webOrigins: []
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: {{ uuidv4 }}
        clientId: account-console
        name: "${client_account-console}"
        rootUrl: "${authBaseUrl}"
        baseUrl: "/realms/{{ $.Values.realm.name }}-{{ $loop }}/account/"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris:
          - "/realms/{{ $.Values.realm.name }}-{{ $loop }}/account/*"
        webOrigins: []
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
          pkce.code.challenge.method: S256
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        protocolMappers:
          - id: {{ uuidv4 }}
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
            config: {}
        defaultClientScopes:
          - web-origins
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: {{ uuidv4 }}
        clientId: admin-cli
        name: "${client_admin-cli}"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ randAlphaNum 32 }}"
        redirectUris: []
        webOrigins: []
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: false
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: {{ $clientBrokerContainerId }}
        clientId: broker
        name: "${client_broker}"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ randAlphaNum 32 }}"
        redirectUris: []
        webOrigins: []
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: {{ uuidv4 }} 
        clientId: {{ $.Values.client.gateway }}
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ randAlphaNum 32 }}"
        redirectUris:
          - "*"
        webOrigins:
          - "*"
          - "+"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: true
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: true
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          saml.force.post.binding: 'false'
          saml.multivalued.roles: 'false'
          frontchannel.logout.session.required: 'false'
          post.logout.redirect.uris: "+"
          oauth2.device.authorization.grant.enabled: 'false'
          backchannel.logout.revoke.offline.tokens: 'false'
          saml.server.signature.keyinfo.ext: 'false'
          use.refresh.tokens: 'true'
          oidc.ciba.grant.enabled: 'false'
          backchannel.logout.session.required: 'false'
          client_credentials.use_refresh_token: 'false'
          require.pushed.authorization.requests: 'false'
          saml.client.signature: 'false'
          saml.allow.ecp.flow: 'false'
          id.token.as.detached.signature: 'false'
          saml.assertion.signature: 'false'
          client.secret.creation.time: '1679473817'
          saml.encrypt: 'false'
          saml.server.signature: 'false'
          exclude.session.state.from.auth.response: 'false'
          saml.artifact.binding: 'false'
          saml_force_name_id_format: 'false'
          acr.loa.map: "{}"
          tls.client.certificate.bound.access.tokens: 'false'
          saml.authnstatement: 'false'
          display.on.consent.screen: 'false'
          token.response.type.bearer.lower-case: 'false'
          saml.onetimeuse.condition: 'false'
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        protocolMappers:
          - id: {{ uuidv4 }}
            name: Client ID
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
            consentRequired: false
            config:
              user.session.note: clientId
              userinfo.token.claim: 'true'
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: clientId
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: Client Host
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
            consentRequired: false
            config:
              user.session.note: clientHost
              userinfo.token.claim: 'true'
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: clientHost
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: Client IP Address
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
            consentRequired: false
            config:
              user.session.note: clientAddress
              userinfo.token.claim: 'true'
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: clientAddress
              jsonType.label: String
        defaultClientScopes:
          - web-origins
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: {{ $clientRealmManagementContainerId }}
        clientId: realm-management
        name: "${client_realm-management}"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ randAlphaNum 32 }}"
        redirectUris: []
        webOrigins: []
        notBefore: 0
        bearerOnly: true
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        defaultClientScopes:
          - web-origins
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      - id: {{ uuidv4 }}
        clientId: security-admin-console
        name: "${client_security-admin-console}"
        rootUrl: "${authAdminUrl}"
        baseUrl: "/admin/{{ $.Values.realm.name }}-{{ $loop }}/console/"
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: "{{ randAlphaNum 32 }}"
        redirectUris:
          - "/admin/{{ $.Values.realm.name }}-{{ $loop }}/console/*"
        webOrigins:
          - "+"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
          pkce.code.challenge.method: S256
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        protocolMappers:
          - id: {{ uuidv4 }}
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: locale
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: locale
              jsonType.label: String
        defaultClientScopes:
          - web-origins
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
    clientScopes:
      - id: {{ uuidv4 }}
        name: roles
        description: OpenID Connect scope for add user roles to the access token
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'false'
          display.on.consent.screen: 'true'
          consent.screen.text: "${rolesScopeConsentText}"
        protocolMappers:
          - id: {{ uuidv4 }}
            name: realm roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              user.attribute: foo
              access.token.claim: 'true'
              claim.name: realm_access.roles
              jsonType.label: String
              multivalued: 'true'
          - id: {{ uuidv4 }}
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
            config: {}
          - id: {{ uuidv4 }}
            name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            consentRequired: false
            config:
              user.attribute: foo
              access.token.claim: 'true'
              claim.name: resource_access.${client_id}.roles
              jsonType.label: String
              multivalued: 'true'
      - id: {{ uuidv4 }}
        name: role_list
        description: SAML role list
        protocol: saml
        attributes:
          consent.screen.text: "${samlRoleListScopeConsentText}"
          display.on.consent.screen: 'true'
        protocolMappers:
          - id: {{ uuidv4 }}
            name: role list
            protocol: saml
            protocolMapper: saml-role-list-mapper
            consentRequired: false
            config:
              single: 'false'
              attribute.nameformat: Basic
              attribute.name: Role
      - id: {{ uuidv4 }}
        name: address
        description: 'OpenID Connect built-in scope: address'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${addressScopeConsentText}"
        protocolMappers:
          - id: {{ uuidv4 }}
            name: address
            protocol: openid-connect
            protocolMapper: oidc-address-mapper
            consentRequired: false
            config:
              user.attribute.formatted: formatted
              user.attribute.country: country
              user.attribute.postal_code: postal_code
              userinfo.token.claim: 'true'
              user.attribute.street: street
              id.token.claim: 'true'
              user.attribute.region: region
              access.token.claim: 'true'
              user.attribute.locality: locality
      - id: {{ uuidv4 }}
        name: email
        description: 'OpenID Connect built-in scope: email'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${emailScopeConsentText}"
        protocolMappers:
          - id: {{ uuidv4 }}
            name: email
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: email
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: email
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: email verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: emailVerified
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: email_verified
              jsonType.label: boolean
      - id: {{ uuidv4 }}
        name: web-origins
        description: OpenID Connect scope for add allowed web origins to the access token
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'false'
          display.on.consent.screen: 'false'
          consent.screen.text: ''
        protocolMappers:
          - id: {{ uuidv4 }}
            name: allowed web origins
            protocol: openid-connect
            protocolMapper: oidc-allowed-origins-mapper
            consentRequired: false
            config: {}
      - id: {{ uuidv4 }}
        name: offline_access
        description: 'OpenID Connect built-in scope: offline_access'
        protocol: openid-connect
        attributes:
          consent.screen.text: "${offlineAccessScopeConsentText}"
          display.on.consent.screen: 'true'
      - id: {{ uuidv4 }}
        name: microprofile-jwt
        description: Microprofile - JWT built-in scope
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'false'
        protocolMappers:
          - id: {{ uuidv4 }}
            name: groups
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              multivalued: 'true'
              userinfo.token.claim: 'true'
              user.attribute: foo
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: groups
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: upn
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: username
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: upn
              jsonType.label: String
      - id: {{ uuidv4 }}
        name: acr
        description: OpenID Connect scope for add acr (authentication context class reference)
          to the token
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'false'
          display.on.consent.screen: 'false'
        protocolMappers:
          - id: {{ uuidv4 }}
            name: acr loa level
            protocol: openid-connect
            protocolMapper: oidc-acr-mapper
            consentRequired: false
            config:
              id.token.claim: 'true'
              access.token.claim: 'true'
              userinfo.token.claim: 'true'
      - id: {{ uuidv4 }}
        name: profile
        description: 'OpenID Connect built-in scope: profile'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${profileScopeConsentText}"
        protocolMappers:
          - id: {{ uuidv4 }}
            name: given name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: firstName
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: given_name
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: profile
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: profile
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: profile
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: family name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: lastName
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: family_name
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: updated at
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: updatedAt
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: updated_at
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: website
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: website
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: website
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: gender
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: gender
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: gender
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: middle name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: middleName
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: middle_name
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: picture
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: picture
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: picture
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: username
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: username
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: preferred_username
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: birthdate
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: birthdate
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: birthdate
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: nickname
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: nickname
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: nickname
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: full name
            protocol: openid-connect
            protocolMapper: oidc-full-name-mapper
            consentRequired: false
            config:
              id.token.claim: 'true'
              access.token.claim: 'true'
              userinfo.token.claim: 'true'
          - id: '{{ uuidv4 }}'
            name: zoneinfo
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: zoneinfo
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: zoneinfo
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: locale
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: locale
              jsonType.label: String
      - id: {{ uuidv4 }}
        name: phone
        description: 'OpenID Connect built-in scope: phone'
        protocol: openid-connect
        attributes:
          include.in.token.scope: 'true'
          display.on.consent.screen: 'true'
          consent.screen.text: "${phoneScopeConsentText}"
        protocolMappers:
          - id: {{ uuidv4 }}
            name: phone number
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: phoneNumber
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: phone_number
              jsonType.label: String
          - id: {{ uuidv4 }}
            name: phone number verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: 'true'
              user.attribute: phoneNumberVerified
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: phone_number_verified
              jsonType.label: boolean
    defaultDefaultClientScopes:
      - web-origins
      - role_list
      - roles
      - profile
      - email
      - acr
    defaultOptionalClientScopes:
      - address
      - phone
      - microprofile-jwt
      - offline_access
    browserSecurityHeaders:
      contentSecurityPolicyReportOnly: ''
      xContentTypeOptions: nosniff
      xRobotsTag: none
      xFrameOptions: SAMEORIGIN
      contentSecurityPolicy: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
      xXSSProtection: 1; mode=block
      strictTransportSecurity: max-age=31536000; includeSubDomains
    smtpServer: {}
    eventsEnabled: false
    eventsListeners:
      - jboss-logging
    enabledEventTypes: []
    adminEventsEnabled: false
    adminEventsDetailsEnabled: false
    identityProviders: []
    identityProviderMappers: []
    components:
      org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy:
        - id: {{ uuidv4 }}
          name: Trusted Hosts
          providerId: trusted-hosts
          subType: anonymous
          subComponents: {}
          config:
            host-sending-registration-request-must-match:
              - 'true'
            client-uris-must-match:
              - 'true'
        - id: {{ uuidv4 }}
          name: Full Scope Disabled
          providerId: scope
          subType: anonymous
          subComponents: {}
          config: {}
        - id: {{ uuidv4 }}
          name: Consent Required
          providerId: consent-required
          subType: anonymous
          subComponents: {}
          config: {}
        - id: {{ uuidv4 }}
          name: Allowed Protocol Mapper Types
          providerId: allowed-protocol-mappers
          subType: authenticated
          subComponents: {}
          config:
            allowed-protocol-mapper-types:
              - oidc-usermodel-property-mapper
              - oidc-usermodel-attribute-mapper
              - oidc-sha256-pairwise-sub-mapper
              - saml-user-property-mapper
              - saml-role-list-mapper
              - oidc-full-name-mapper
              - saml-user-attribute-mapper
              - oidc-address-mapper
        - id: {{ uuidv4 }}
          name: Max Clients Limit
          providerId: max-clients
          subType: anonymous
          subComponents: {}
          config:
            max-clients:
              - '200'
        - id: {{ uuidv4 }}
          name: Allowed Client Scopes
          providerId: allowed-client-templates
          subType: authenticated
          subComponents: {}
          config:
            allow-default-scopes:
              - 'true'
        - id: {{ uuidv4 }}
          name: Allowed Protocol Mapper Types
          providerId: allowed-protocol-mappers
          subType: anonymous
          subComponents: {}
          config:
            allowed-protocol-mapper-types:
              - oidc-sha256-pairwise-sub-mapper
              - oidc-usermodel-property-mapper
              - oidc-address-mapper
              - oidc-usermodel-attribute-mapper
              - saml-user-property-mapper
              - saml-role-list-mapper
              - saml-user-attribute-mapper
              - oidc-full-name-mapper
        - id: {{ uuidv4 }}
          name: Allowed Client Scopes
          providerId: allowed-client-templates
          subType: anonymous
          subComponents: {}
          config:
            allow-default-scopes:
              - 'true'
      org.keycloak.userprofile.UserProfileProvider:
        - id: {{ uuidv4 }}
          providerId: declarative-user-profile
          subComponents: {}
          config: {}
      org.keycloak.keys.KeyProvider:
        - id: {{ uuidv4 }}
          name: aes-generated
          providerId: aes-generated
          subComponents: {}
          config:
            priority:
              - '100'
        - id: {{ uuidv4 }}
          name: rsa-generated
          providerId: rsa-generated
          subComponents: {}
          config:
            priority:
              - '100'
        - id: {{ uuidv4 }}
          name: hmac-generated
          providerId: hmac-generated
          subComponents: {}
          config:
            priority:
              - '100'
            algorithm:
              - HS256
    internationalizationEnabled: false
    supportedLocales: []
    authenticationFlows:
      - id: {{ uuidv4 }}
        alias: Account verification options
        description: Method with which to verity the existing account
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-email-verification
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: true
            flowAlias: Verify Existing Account by Re-authentication
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: Authentication Options
        description: Authentication options.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: basic-auth
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: basic-auth-otp
            authenticatorFlow: false
            requirement: DISABLED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            requirement: DISABLED
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: Browser - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: Direct Grant - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: direct-grant-validate-otp
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: First broker login - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: Handle Existing Account
        description: Handle what to do if there is existing account with same email/username
          like authenticated identity provider
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
        - authenticator: idp-confirm-link
          authenticatorFlow: false
          requirement: REQUIRED
          priority: 10
          autheticatorFlow: false
          userSetupAllowed: false
        - authenticatorFlow: true
          requirement: REQUIRED
          priority: 20
          autheticatorFlow: true
          flowAlias: Account verification options
          userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: Reset - Conditional OTP
        description: Flow to determine if the OTP should be reset or not. Set to REQUIRED
          to force.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-otp
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - id: '{{ uuidv4 }}'
        alias: User creation or linking
        description: Flow for the existing/non-existing user alternatives
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticatorConfig: create unique user config
            authenticator: idp-create-user-if-unique
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: true
            flowAlias: Handle Existing Account
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: Verify Existing Account by Re-authentication
        description: Reauthentication of existing account
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-username-password-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 20
            autheticatorFlow: true
            flowAlias: First broker login - Conditional OTP
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: browser
        description: browser based authentication
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-cookie
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            requirement: DISABLED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: identity-provider-redirector
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 25
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 30
            autheticatorFlow: true
            flowAlias: forms
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: clients
        description: Base authentication for clients
        providerId: client-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: client-secret
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-jwt
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-secret-jwt
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-x509
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 40
            autheticatorFlow: false
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: direct grant
        description: OpenID Connect Resource Owner Grant
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: direct-grant-validate-username
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: direct-grant-validate-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 30
            autheticatorFlow: true
            flowAlias: Direct Grant - Conditional OTP
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: docker auth
        description: Used by Docker clients to authenticate against the IDP
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: docker-http-basic-authenticator
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: first broker login
        description: Actions taken after first broker login with identity provider account,
          which is not yet linked to any Keycloak account
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticatorConfig: review profile config
            authenticator: idp-review-profile
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: User creation or linking
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: forms
        description: Username, password, otp and other auth forms.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-username-password-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 20
            autheticatorFlow: true
            flowAlias: Browser - Conditional OTP
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: http challenge
        description: An authentication flow based on challenge-response HTTP Authentication
          Schemes
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: no-cookie-redirect
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: Authentication Options
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: registration
        description: registration flow
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-page-form
            authenticatorFlow: true
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: true
            flowAlias: registration form
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: registration form
        description: registration form
        providerId: form-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-user-creation
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-profile-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 40
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-password-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 50
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-recaptcha-action
            authenticatorFlow: false
            requirement: DISABLED
            priority: 60
            autheticatorFlow: false
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: reset credentials
        description: Reset credentials for a user if they forgot their password or something
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: reset-credentials-choose-user
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-credential-email
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 40
            autheticatorFlow: true
            flowAlias: Reset - Conditional OTP
            userSetupAllowed: false
      - id: {{ uuidv4 }}
        alias: saml ecp
        description: SAML ECP Profile Authentication Flow
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: http-basic-authenticator
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
    authenticatorConfig:
      - id: {{ uuidv4 }}
        alias: create unique user config
        config:
          require.password.update.after.registration: 'false'
      - id: {{ uuidv4 }}
        alias: review profile config
        config:
          update.profile.on.first.login: missing
    requiredActions:
      - alias: CONFIGURE_TOTP
        name: Configure OTP
        providerId: CONFIGURE_TOTP
        enabled: true
        defaultAction: false
        priority: 10
        config: {}
      - alias: terms_and_conditions
        name: Terms and Conditions
        providerId: terms_and_conditions
        enabled: false
        defaultAction: false
        priority: 20
        config: {}
      - alias: UPDATE_PASSWORD
        name: Update Password
        providerId: UPDATE_PASSWORD
        enabled: true
        defaultAction: false
        priority: 30
        config: {}
      - alias: UPDATE_PROFILE
        name: Update Profile
        providerId: UPDATE_PROFILE
        enabled: true
        defaultAction: false
        priority: 40
        config: {}
      - alias: VERIFY_EMAIL
        name: Verify Email
        providerId: VERIFY_EMAIL
        enabled: true
        defaultAction: false
        priority: 50
        config: {}
      - alias: delete_account
        name: Delete Account
        providerId: delete_account
        enabled: false
        defaultAction: false
        priority: 60
        config: {}
      - alias: update_user_locale
        name: Update User Locale
        providerId: update_user_locale
        enabled: true
        defaultAction: false
        priority: 1000
        config: {}
    browserFlow: browser
    registrationFlow: registration
    directGrantFlow: direct grant
    resetCredentialsFlow: reset credentials
    clientAuthenticationFlow: clients
    dockerAuthenticationFlow: docker auth
    attributes:
      cibaBackchannelTokenDeliveryMode: poll
      cibaAuthRequestedUserHint: login_hint
      clientOfflineSessionMaxLifespan: '0'
      oauth2DevicePollingInterval: '5'
      clientSessionIdleTimeout: '0'
      userProfileEnabled: 'false'
      clientOfflineSessionIdleTimeout: '0'
      cibaInterval: '5'
      realmReusableOtpCode: 'false'
      cibaExpiresIn: '120'
      oauth2DeviceCodeLifespan: '600'
      parRequestUriLifespan: '60'
      clientSessionMaxLifespan: '0'
    keycloakVersion: 22.0.6.redhat-00002
    userManagedAccessAllowed: false
    clientProfiles:
      profiles: []
    clientPolicies:
      policies: []
{{- end }}
